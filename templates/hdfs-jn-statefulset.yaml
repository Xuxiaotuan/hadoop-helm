# JournalNode 的 StatefulSet 配置：用于 NameNode 的编辑日志共享（实现 HA）
# 通常部署 3 个副本，采用多数派机制确保日志一致性
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hadoop.fullname" . }}-hdfs-jn
  labels:
    app.kubernetes.io/name: {{ include "hadoop.name" . }}
    helm.sh/chart: {{ include "hadoop.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: hdfs-jn
spec:
  # 使用无头服务（Headless Service），使每个 Pod 有固定 DNS 名称
  serviceName: {{ include "hadoop.fullname" . }}-hdfs-jn
  replicas: {{ .Values.hdfs.journalNode.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hadoop.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: hdfs-jn
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hadoop.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: hdfs-jn
    spec:
      # 设置反亲和性，避免多个 JN 分布在同一节点
      affinity:
        podAntiAffinity:
        {{- if eq .Values.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "hadoop.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
                  app.kubernetes.io/component: hdfs-jn
        {{- else if eq .Values.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 5
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: {{ include "hadoop.name" . }}
                    app.kubernetes.io/instance: {{ .Release.Name }}
                    app.kubernetes.io/component: hdfs-jn
        {{- end }}

      containers:
        - name: hdfs-jn  # 容器名称
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}

          # 启动命令：调用 bootstrap.sh 并传参 -j（JournalNode）
          command:
            - "/bin/bash"
            - "/tmp/hadoop-config/bootstrap.sh"
            - "-j"

          # 就绪探针（Ready）
          readinessProbe:
            httpGet:
              path: /
              port: 8480
            initialDelaySeconds: 90
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 4

          # 存活探针（Live）
          livenessProbe:
            httpGet:
              path: /
              port: 8480
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 4

          resources:
{{ toYaml .Values.hdfs.journalNode.resources | indent 12 }}

          volumeMounts:
            - name: hadoop-config
              mountPath: /tmp/hadoop-config
            - name: dfs
              mountPath: /data/hdfs/journalnode

      volumes:
        # 配置文件卷：挂载 configMap（含 bootstrap.sh、xml 配置等）
        - name: hadoop-config
          configMap:
            name: {{ include "hadoop.fullname" . }}

        # 如果未开启持久化存储，使用临时卷（Pod 删除后数据丢失）
        {{- if not .Values.persistence.journalNode.enabled }}
        - name: dfs
          emptyDir: {}
        {{- end }}

  # 持久化存储卷声明（PVC），StatefulSet 特有
  {{- if .Values.persistence.journalNode.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: dfs
        labels:
          app.kubernetes.io/name: {{ include "hadoop.name" . }}
          helm.sh/chart: {{ include "hadoop.chart" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/component: hdfs-jn
      spec:
        accessModes:
          - {{ .Values.persistence.journalNode.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.journalNode.size | quote }}
        storageClassName: {{ .Values.persistence.journalNode.storageClass | quote }}
        selector:
          matchLabels:
            app: hadoop
            type: journalnode
  {{- end }}


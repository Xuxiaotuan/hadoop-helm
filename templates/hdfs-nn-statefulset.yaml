# NameNode 的 StatefulSet 配置，管理 HDFS 主节点（负责元数据）
# 单节点非 HA 最简部署
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hadoop.fullname" . }}-hdfs-nn
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/hadoop-configmap.yaml") . | sha256sum }}
  labels:
    app.kubernetes.io/name: {{ include "hadoop.name" . }}
    helm.sh/chart: {{ include "hadoop.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: hdfs-nn
spec:
  serviceName: {{ include "hadoop.fullname" . }}-hdfs-nn
  replicas: {{ .Values.hdfs.nameNode.replicas }}  # 支持多个namenode副本
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hadoop.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: hdfs-nn
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hadoop.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: hdfs-nn
    spec:
      serviceAccountName: {{ include "hadoop.fullname" . }}-hdfs-nn
      affinity:
        podAntiAffinity:
        {{- if eq .Values.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "hadoop.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
                  app.kubernetes.io/component: hdfs-nn
        {{- else if eq .Values.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 5
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: {{ include "hadoop.name" . }}
                    app.kubernetes.io/instance: {{ .Release.Name }}
                    app.kubernetes.io/component: hdfs-nn
        {{- end }}
      terminationGracePeriodSeconds: 0
      containers:
        - name: hdfs-nn
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - "/bin/bash"
            - "/tmp/hadoop-config/bootstrap.sh"
          env:
            - name: KUBECONFIG
              value: "/root/.kube/config"
          resources:
{{ toYaml .Values.hdfs.nameNode.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: 9870
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 9870
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: hadoop-config
              mountPath: /tmp/hadoop-config
            - name: dfs
              mountPath: /data/hdfs/namenode
            - name: kubectl-bin
              mountPath: /usr/bin/kubectl
              readOnly: true
            - name: kubeconfig
              mountPath: /root/.kube/config
              subPath: config
              readOnly: true
      volumes:
        - name: hadoop-config
          configMap:
            name: {{ include "hadoop.fullname" . }}
        - name: kubectl-bin
          hostPath:
            path: /usr/bin/kubectl
            type: File
        - name: kubeconfig
          hostPath:
            path: ~/.kube/config
            type: File

        {{- if not .Values.persistence.nameNode.enabled }}
        # ➤ 未启用持久化时使用 emptyDir
        - name: dfs
          emptyDir: {}
        {{- end }}
  {{- if .Values.persistence.nameNode.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: dfs
        labels:
          app.kubernetes.io/name: {{ include "hadoop.name" . }}
          helm.sh/chart: {{ include "hadoop.chart" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/component: hdfs-nn
      spec:
        accessModes:
          - {{ .Values.persistence.nameNode.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.nameNode.size | quote }}
        storageClassName: {{ .Values.persistence.nameNode.storageClass | quote }}
        selector:
          matchLabels:
            app: hadoop
            type: namenode
  {{- end }}

